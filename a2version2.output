Grammar

    0 $accept: START $end

    1 START: SECTION1 NEWLINE PRIMITIVE SECTION2 NEWLINE FUNCTIONS SECTION3 NEWLINE ENGINE

    2 PRIMITIVE: ID '=' EXPR NEWLINE PRIMITIVE
    3          | %empty

    4 ENGINE: '[' PLAY ']'
    5       | '[' PLAY WITH PARAM PARAMLIST ']'

    6 FUNCTIONS: FUNCTION NEWLINE FUNCTIONS
    7          | %empty

    8 FUNCTION: '{' ID BODY '}'

    9 BODY: STATEMENT BODY
   10     | STATEMENT

   11 STATEMENT: IFSTATEMENT
   12          | WHILELOOP
   13          | ID '=' EXPR
   14          | RETURN EXPR

   15 IFSTATEMENT: IF '(' EXPR ')' THEN BODY END
   16            | IF '(' EXPR ')' THEN STATEMENT ELSE STATEMENT END

   17 WHILELOOP: WHILE '(' EXPR ')' BODY END

   18 EXPR: ARITHLOGIC
   19     | '[' CALL ID ']'
   20     | '[' CALL ID WITH PARAM PARAMLIST ']'

   21 ARITHLOGIC: TERM ARITH1

   22 TERM: FACTOR TERM1

   23 ARITH1: '+' TERM ARITH1
   24       | '-' TERM ARITH1
   25       | OR TERM ARITH1
   26       | %empty

   27 FACTOR: ID
   28       | NUM
   29       | '(' EXPR ')'
   30       | '(' NEG EXPR ')'
   31       | '(' NOT EXPR ')'

   32 TERM1: '*' FACTOR TERM1
   33      | AND FACTOR TERM1
   34      | %empty

   35 PARAM: ID '=' EXPR

   36 PARAMLIST: PARAM PARAMLIST
   37          | %empty


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 15 16 17 29 30 31
    ')' (41) 15 16 17 29 30 31
    '*' (42) 32
    '+' (43) 23
    '-' (45) 24
    '=' (61) 2 13 35
    '[' (91) 4 5 19 20
    ']' (93) 4 5 19 20
    '{' (123) 8
    '}' (125) 8
    error (256)
    SECTION1 (258) 1
    SECTION2 (259) 1
    SECTION3 (260) 1
    NEWLINE (261) 1 2 6
    NUM (262) 28
    ID (263) 2 8 13 19 20 27 35
    IF (264) 15 16
    THEN (265) 15 16
    ELSE (266) 16
    END (267) 15 16 17
    WHILE (268) 17
    CALL (269) 19 20
    WITH (270) 5 20
    OR (271) 25
    AND (272) 33
    NOT (273) 31
    NEG (274) 30
    PLAY (275) 4 5
    RETURN (276) 14


Nonterminals, with rules where they appear

    $accept (32)
        on left: 0
    START (33)
        on left: 1
        on right: 0
    PRIMITIVE (34)
        on left: 2 3
        on right: 1 2
    ENGINE (35)
        on left: 4 5
        on right: 1
    FUNCTIONS (36)
        on left: 6 7
        on right: 1 6
    FUNCTION (37)
        on left: 8
        on right: 6
    BODY (38)
        on left: 9 10
        on right: 8 9 15 17
    STATEMENT (39)
        on left: 11 12 13 14
        on right: 9 10 16
    IFSTATEMENT (40)
        on left: 15 16
        on right: 11
    WHILELOOP (41)
        on left: 17
        on right: 12
    EXPR (42)
        on left: 18 19 20
        on right: 2 13 14 15 16 17 29 30 31 35
    ARITHLOGIC (43)
        on left: 21
        on right: 18
    TERM (44)
        on left: 22
        on right: 21 23 24 25
    ARITH1 (45)
        on left: 23 24 25 26
        on right: 21 23 24 25
    FACTOR (46)
        on left: 27 28 29 30 31
        on right: 22 32 33
    TERM1 (47)
        on left: 32 33 34
        on right: 22 32 33
    PARAM (48)
        on left: 35
        on right: 5 20 36
    PARAMLIST (49)
        on left: 36 37
        on right: 5 20 36


State 0

    0 $accept: . START $end
    1 START: . SECTION1 NEWLINE PRIMITIVE SECTION2 NEWLINE FUNCTIONS SECTION3 NEWLINE ENGINE

    SECTION1  shift, and go to state 1

    START  go to state 2


State 1

    1 START: SECTION1 . NEWLINE PRIMITIVE SECTION2 NEWLINE FUNCTIONS SECTION3 NEWLINE ENGINE

    NEWLINE  shift, and go to state 3


State 2

    0 $accept: START . $end

    $end  shift, and go to state 4


State 3

    1 START: SECTION1 NEWLINE . PRIMITIVE SECTION2 NEWLINE FUNCTIONS SECTION3 NEWLINE ENGINE
    2 PRIMITIVE: . ID '=' EXPR NEWLINE PRIMITIVE
    3          | . %empty  [SECTION2]

    ID  shift, and go to state 5

    $default  reduce using rule 3 (PRIMITIVE)

    PRIMITIVE  go to state 6


State 4

    0 $accept: START $end .

    $default  accept


State 5

    2 PRIMITIVE: ID . '=' EXPR NEWLINE PRIMITIVE

    '='  shift, and go to state 7


State 6

    1 START: SECTION1 NEWLINE PRIMITIVE . SECTION2 NEWLINE FUNCTIONS SECTION3 NEWLINE ENGINE

    SECTION2  shift, and go to state 8


State 7

    2 PRIMITIVE: ID '=' . EXPR NEWLINE PRIMITIVE
   18 EXPR: . ARITHLOGIC
   19     | . '[' CALL ID ']'
   20     | . '[' CALL ID WITH PARAM PARAMLIST ']'
   21 ARITHLOGIC: . TERM ARITH1
   22 TERM: . FACTOR TERM1
   27 FACTOR: . ID
   28       | . NUM
   29       | . '(' EXPR ')'
   30       | . '(' NEG EXPR ')'
   31       | . '(' NOT EXPR ')'

    NUM  shift, and go to state 9
    ID   shift, and go to state 10
    '['  shift, and go to state 11
    '('  shift, and go to state 12

    EXPR        go to state 13
    ARITHLOGIC  go to state 14
    TERM        go to state 15
    FACTOR      go to state 16


State 8

    1 START: SECTION1 NEWLINE PRIMITIVE SECTION2 . NEWLINE FUNCTIONS SECTION3 NEWLINE ENGINE

    NEWLINE  shift, and go to state 17


State 9

   28 FACTOR: NUM .

    $default  reduce using rule 28 (FACTOR)


State 10

   27 FACTOR: ID .

    $default  reduce using rule 27 (FACTOR)


State 11

   19 EXPR: '[' . CALL ID ']'
   20     | '[' . CALL ID WITH PARAM PARAMLIST ']'

    CALL  shift, and go to state 18


State 12

   18 EXPR: . ARITHLOGIC
   19     | . '[' CALL ID ']'
   20     | . '[' CALL ID WITH PARAM PARAMLIST ']'
   21 ARITHLOGIC: . TERM ARITH1
   22 TERM: . FACTOR TERM1
   27 FACTOR: . ID
   28       | . NUM
   29       | . '(' EXPR ')'
   29       | '(' . EXPR ')'
   30       | . '(' NEG EXPR ')'
   30       | '(' . NEG EXPR ')'
   31       | . '(' NOT EXPR ')'
   31       | '(' . NOT EXPR ')'

    NUM  shift, and go to state 9
    ID   shift, and go to state 10
    NOT  shift, and go to state 19
    NEG  shift, and go to state 20
    '['  shift, and go to state 11
    '('  shift, and go to state 12

    EXPR        go to state 21
    ARITHLOGIC  go to state 14
    TERM        go to state 15
    FACTOR      go to state 16


State 13

    2 PRIMITIVE: ID '=' EXPR . NEWLINE PRIMITIVE

    NEWLINE  shift, and go to state 22


State 14

   18 EXPR: ARITHLOGIC .

    $default  reduce using rule 18 (EXPR)


State 15

   21 ARITHLOGIC: TERM . ARITH1
   23 ARITH1: . '+' TERM ARITH1
   24       | . '-' TERM ARITH1
   25       | . OR TERM ARITH1
   26       | . %empty  [NEWLINE, ID, IF, ELSE, END, WHILE, RETURN, ']', '}', ')']

    OR   shift, and go to state 23
    '+'  shift, and go to state 24
    '-'  shift, and go to state 25

    $default  reduce using rule 26 (ARITH1)

    ARITH1  go to state 26


State 16

   22 TERM: FACTOR . TERM1
   32 TERM1: . '*' FACTOR TERM1
   33      | . AND FACTOR TERM1
   34      | . %empty  [NEWLINE, ID, IF, ELSE, END, WHILE, OR, RETURN, ']', '}', ')', '+', '-']

    AND  shift, and go to state 27
    '*'  shift, and go to state 28

    $default  reduce using rule 34 (TERM1)

    TERM1  go to state 29


State 17

    1 START: SECTION1 NEWLINE PRIMITIVE SECTION2 NEWLINE . FUNCTIONS SECTION3 NEWLINE ENGINE
    6 FUNCTIONS: . FUNCTION NEWLINE FUNCTIONS
    7          | . %empty  [SECTION3]
    8 FUNCTION: . '{' ID BODY '}'

    '{'  shift, and go to state 30

    $default  reduce using rule 7 (FUNCTIONS)

    FUNCTIONS  go to state 31
    FUNCTION   go to state 32


State 18

   19 EXPR: '[' CALL . ID ']'
   20     | '[' CALL . ID WITH PARAM PARAMLIST ']'

    ID  shift, and go to state 33


State 19

   18 EXPR: . ARITHLOGIC
   19     | . '[' CALL ID ']'
   20     | . '[' CALL ID WITH PARAM PARAMLIST ']'
   21 ARITHLOGIC: . TERM ARITH1
   22 TERM: . FACTOR TERM1
   27 FACTOR: . ID
   28       | . NUM
   29       | . '(' EXPR ')'
   30       | . '(' NEG EXPR ')'
   31       | . '(' NOT EXPR ')'
   31       | '(' NOT . EXPR ')'

    NUM  shift, and go to state 9
    ID   shift, and go to state 10
    '['  shift, and go to state 11
    '('  shift, and go to state 12

    EXPR        go to state 34
    ARITHLOGIC  go to state 14
    TERM        go to state 15
    FACTOR      go to state 16


State 20

   18 EXPR: . ARITHLOGIC
   19     | . '[' CALL ID ']'
   20     | . '[' CALL ID WITH PARAM PARAMLIST ']'
   21 ARITHLOGIC: . TERM ARITH1
   22 TERM: . FACTOR TERM1
   27 FACTOR: . ID
   28       | . NUM
   29       | . '(' EXPR ')'
   30       | . '(' NEG EXPR ')'
   30       | '(' NEG . EXPR ')'
   31       | . '(' NOT EXPR ')'

    NUM  shift, and go to state 9
    ID   shift, and go to state 10
    '['  shift, and go to state 11
    '('  shift, and go to state 12

    EXPR        go to state 35
    ARITHLOGIC  go to state 14
    TERM        go to state 15
    FACTOR      go to state 16


State 21

   29 FACTOR: '(' EXPR . ')'

    ')'  shift, and go to state 36


State 22

    2 PRIMITIVE: . ID '=' EXPR NEWLINE PRIMITIVE
    2          | ID '=' EXPR NEWLINE . PRIMITIVE
    3          | . %empty  [SECTION2]

    ID  shift, and go to state 5

    $default  reduce using rule 3 (PRIMITIVE)

    PRIMITIVE  go to state 37


State 23

   22 TERM: . FACTOR TERM1
   25 ARITH1: OR . TERM ARITH1
   27 FACTOR: . ID
   28       | . NUM
   29       | . '(' EXPR ')'
   30       | . '(' NEG EXPR ')'
   31       | . '(' NOT EXPR ')'

    NUM  shift, and go to state 9
    ID   shift, and go to state 10
    '('  shift, and go to state 12

    TERM    go to state 38
    FACTOR  go to state 16


State 24

   22 TERM: . FACTOR TERM1
   23 ARITH1: '+' . TERM ARITH1
   27 FACTOR: . ID
   28       | . NUM
   29       | . '(' EXPR ')'
   30       | . '(' NEG EXPR ')'
   31       | . '(' NOT EXPR ')'

    NUM  shift, and go to state 9
    ID   shift, and go to state 10
    '('  shift, and go to state 12

    TERM    go to state 39
    FACTOR  go to state 16


State 25

   22 TERM: . FACTOR TERM1
   24 ARITH1: '-' . TERM ARITH1
   27 FACTOR: . ID
   28       | . NUM
   29       | . '(' EXPR ')'
   30       | . '(' NEG EXPR ')'
   31       | . '(' NOT EXPR ')'

    NUM  shift, and go to state 9
    ID   shift, and go to state 10
    '('  shift, and go to state 12

    TERM    go to state 40
    FACTOR  go to state 16


State 26

   21 ARITHLOGIC: TERM ARITH1 .

    $default  reduce using rule 21 (ARITHLOGIC)


State 27

   27 FACTOR: . ID
   28       | . NUM
   29       | . '(' EXPR ')'
   30       | . '(' NEG EXPR ')'
   31       | . '(' NOT EXPR ')'
   33 TERM1: AND . FACTOR TERM1

    NUM  shift, and go to state 9
    ID   shift, and go to state 10
    '('  shift, and go to state 12

    FACTOR  go to state 41


State 28

   27 FACTOR: . ID
   28       | . NUM
   29       | . '(' EXPR ')'
   30       | . '(' NEG EXPR ')'
   31       | . '(' NOT EXPR ')'
   32 TERM1: '*' . FACTOR TERM1

    NUM  shift, and go to state 9
    ID   shift, and go to state 10
    '('  shift, and go to state 12

    FACTOR  go to state 42


State 29

   22 TERM: FACTOR TERM1 .

    $default  reduce using rule 22 (TERM)


State 30

    8 FUNCTION: '{' . ID BODY '}'

    ID  shift, and go to state 43


State 31

    1 START: SECTION1 NEWLINE PRIMITIVE SECTION2 NEWLINE FUNCTIONS . SECTION3 NEWLINE ENGINE

    SECTION3  shift, and go to state 44


State 32

    6 FUNCTIONS: FUNCTION . NEWLINE FUNCTIONS

    NEWLINE  shift, and go to state 45


State 33

   19 EXPR: '[' CALL ID . ']'
   20     | '[' CALL ID . WITH PARAM PARAMLIST ']'

    WITH  shift, and go to state 46
    ']'   shift, and go to state 47


State 34

   31 FACTOR: '(' NOT EXPR . ')'

    ')'  shift, and go to state 48


State 35

   30 FACTOR: '(' NEG EXPR . ')'

    ')'  shift, and go to state 49


State 36

   29 FACTOR: '(' EXPR ')' .

    $default  reduce using rule 29 (FACTOR)


State 37

    2 PRIMITIVE: ID '=' EXPR NEWLINE PRIMITIVE .

    $default  reduce using rule 2 (PRIMITIVE)


State 38

   23 ARITH1: . '+' TERM ARITH1
   24       | . '-' TERM ARITH1
   25       | . OR TERM ARITH1
   25       | OR TERM . ARITH1
   26       | . %empty  [NEWLINE, ID, IF, ELSE, END, WHILE, RETURN, ']', '}', ')']

    OR   shift, and go to state 23
    '+'  shift, and go to state 24
    '-'  shift, and go to state 25

    $default  reduce using rule 26 (ARITH1)

    ARITH1  go to state 50


State 39

   23 ARITH1: . '+' TERM ARITH1
   23       | '+' TERM . ARITH1
   24       | . '-' TERM ARITH1
   25       | . OR TERM ARITH1
   26       | . %empty  [NEWLINE, ID, IF, ELSE, END, WHILE, RETURN, ']', '}', ')']

    OR   shift, and go to state 23
    '+'  shift, and go to state 24
    '-'  shift, and go to state 25

    $default  reduce using rule 26 (ARITH1)

    ARITH1  go to state 51


State 40

   23 ARITH1: . '+' TERM ARITH1
   24       | . '-' TERM ARITH1
   24       | '-' TERM . ARITH1
   25       | . OR TERM ARITH1
   26       | . %empty  [NEWLINE, ID, IF, ELSE, END, WHILE, RETURN, ']', '}', ')']

    OR   shift, and go to state 23
    '+'  shift, and go to state 24
    '-'  shift, and go to state 25

    $default  reduce using rule 26 (ARITH1)

    ARITH1  go to state 52


State 41

   32 TERM1: . '*' FACTOR TERM1
   33      | . AND FACTOR TERM1
   33      | AND FACTOR . TERM1
   34      | . %empty  [NEWLINE, ID, IF, ELSE, END, WHILE, OR, RETURN, ']', '}', ')', '+', '-']

    AND  shift, and go to state 27
    '*'  shift, and go to state 28

    $default  reduce using rule 34 (TERM1)

    TERM1  go to state 53


State 42

   32 TERM1: . '*' FACTOR TERM1
   32      | '*' FACTOR . TERM1
   33      | . AND FACTOR TERM1
   34      | . %empty  [NEWLINE, ID, IF, ELSE, END, WHILE, OR, RETURN, ']', '}', ')', '+', '-']

    AND  shift, and go to state 27
    '*'  shift, and go to state 28

    $default  reduce using rule 34 (TERM1)

    TERM1  go to state 54


State 43

    8 FUNCTION: '{' ID . BODY '}'
    9 BODY: . STATEMENT BODY
   10     | . STATEMENT
   11 STATEMENT: . IFSTATEMENT
   12          | . WHILELOOP
   13          | . ID '=' EXPR
   14          | . RETURN EXPR
   15 IFSTATEMENT: . IF '(' EXPR ')' THEN BODY END
   16            | . IF '(' EXPR ')' THEN STATEMENT ELSE STATEMENT END
   17 WHILELOOP: . WHILE '(' EXPR ')' BODY END

    ID      shift, and go to state 55
    IF      shift, and go to state 56
    WHILE   shift, and go to state 57
    RETURN  shift, and go to state 58

    BODY         go to state 59
    STATEMENT    go to state 60
    IFSTATEMENT  go to state 61
    WHILELOOP    go to state 62


State 44

    1 START: SECTION1 NEWLINE PRIMITIVE SECTION2 NEWLINE FUNCTIONS SECTION3 . NEWLINE ENGINE

    NEWLINE  shift, and go to state 63


State 45

    6 FUNCTIONS: . FUNCTION NEWLINE FUNCTIONS
    6          | FUNCTION NEWLINE . FUNCTIONS
    7          | . %empty  [SECTION3]
    8 FUNCTION: . '{' ID BODY '}'

    '{'  shift, and go to state 30

    $default  reduce using rule 7 (FUNCTIONS)

    FUNCTIONS  go to state 64
    FUNCTION   go to state 32


State 46

   20 EXPR: '[' CALL ID WITH . PARAM PARAMLIST ']'
   35 PARAM: . ID '=' EXPR

    ID  shift, and go to state 65

    PARAM  go to state 66


State 47

   19 EXPR: '[' CALL ID ']' .

    $default  reduce using rule 19 (EXPR)


State 48

   31 FACTOR: '(' NOT EXPR ')' .

    $default  reduce using rule 31 (FACTOR)


State 49

   30 FACTOR: '(' NEG EXPR ')' .

    $default  reduce using rule 30 (FACTOR)


State 50

   25 ARITH1: OR TERM ARITH1 .

    $default  reduce using rule 25 (ARITH1)


State 51

   23 ARITH1: '+' TERM ARITH1 .

    $default  reduce using rule 23 (ARITH1)


State 52

   24 ARITH1: '-' TERM ARITH1 .

    $default  reduce using rule 24 (ARITH1)


State 53

   33 TERM1: AND FACTOR TERM1 .

    $default  reduce using rule 33 (TERM1)


State 54

   32 TERM1: '*' FACTOR TERM1 .

    $default  reduce using rule 32 (TERM1)


State 55

   13 STATEMENT: ID . '=' EXPR

    '='  shift, and go to state 67


State 56

   15 IFSTATEMENT: IF . '(' EXPR ')' THEN BODY END
   16            | IF . '(' EXPR ')' THEN STATEMENT ELSE STATEMENT END

    '('  shift, and go to state 68


State 57

   17 WHILELOOP: WHILE . '(' EXPR ')' BODY END

    '('  shift, and go to state 69


State 58

   14 STATEMENT: RETURN . EXPR
   18 EXPR: . ARITHLOGIC
   19     | . '[' CALL ID ']'
   20     | . '[' CALL ID WITH PARAM PARAMLIST ']'
   21 ARITHLOGIC: . TERM ARITH1
   22 TERM: . FACTOR TERM1
   27 FACTOR: . ID
   28       | . NUM
   29       | . '(' EXPR ')'
   30       | . '(' NEG EXPR ')'
   31       | . '(' NOT EXPR ')'

    NUM  shift, and go to state 9
    ID   shift, and go to state 10
    '['  shift, and go to state 11
    '('  shift, and go to state 12

    EXPR        go to state 70
    ARITHLOGIC  go to state 14
    TERM        go to state 15
    FACTOR      go to state 16


State 59

    8 FUNCTION: '{' ID BODY . '}'

    '}'  shift, and go to state 71


State 60

    9 BODY: . STATEMENT BODY
    9     | STATEMENT . BODY
   10     | . STATEMENT
   10     | STATEMENT .  [END, '}']
   11 STATEMENT: . IFSTATEMENT
   12          | . WHILELOOP
   13          | . ID '=' EXPR
   14          | . RETURN EXPR
   15 IFSTATEMENT: . IF '(' EXPR ')' THEN BODY END
   16            | . IF '(' EXPR ')' THEN STATEMENT ELSE STATEMENT END
   17 WHILELOOP: . WHILE '(' EXPR ')' BODY END

    ID      shift, and go to state 55
    IF      shift, and go to state 56
    WHILE   shift, and go to state 57
    RETURN  shift, and go to state 58

    $default  reduce using rule 10 (BODY)

    BODY         go to state 72
    STATEMENT    go to state 60
    IFSTATEMENT  go to state 61
    WHILELOOP    go to state 62


State 61

   11 STATEMENT: IFSTATEMENT .

    $default  reduce using rule 11 (STATEMENT)


State 62

   12 STATEMENT: WHILELOOP .

    $default  reduce using rule 12 (STATEMENT)


State 63

    1 START: SECTION1 NEWLINE PRIMITIVE SECTION2 NEWLINE FUNCTIONS SECTION3 NEWLINE . ENGINE
    4 ENGINE: . '[' PLAY ']'
    5       | . '[' PLAY WITH PARAM PARAMLIST ']'

    '['  shift, and go to state 73

    ENGINE  go to state 74


State 64

    6 FUNCTIONS: FUNCTION NEWLINE FUNCTIONS .

    $default  reduce using rule 6 (FUNCTIONS)


State 65

   35 PARAM: ID . '=' EXPR

    '='  shift, and go to state 75


State 66

   20 EXPR: '[' CALL ID WITH PARAM . PARAMLIST ']'
   35 PARAM: . ID '=' EXPR
   36 PARAMLIST: . PARAM PARAMLIST
   37          | . %empty  [']']

    ID  shift, and go to state 65

    $default  reduce using rule 37 (PARAMLIST)

    PARAM      go to state 76
    PARAMLIST  go to state 77


State 67

   13 STATEMENT: ID '=' . EXPR
   18 EXPR: . ARITHLOGIC
   19     | . '[' CALL ID ']'
   20     | . '[' CALL ID WITH PARAM PARAMLIST ']'
   21 ARITHLOGIC: . TERM ARITH1
   22 TERM: . FACTOR TERM1
   27 FACTOR: . ID
   28       | . NUM
   29       | . '(' EXPR ')'
   30       | . '(' NEG EXPR ')'
   31       | . '(' NOT EXPR ')'

    NUM  shift, and go to state 9
    ID   shift, and go to state 10
    '['  shift, and go to state 11
    '('  shift, and go to state 12

    EXPR        go to state 78
    ARITHLOGIC  go to state 14
    TERM        go to state 15
    FACTOR      go to state 16


State 68

   15 IFSTATEMENT: IF '(' . EXPR ')' THEN BODY END
   16            | IF '(' . EXPR ')' THEN STATEMENT ELSE STATEMENT END
   18 EXPR: . ARITHLOGIC
   19     | . '[' CALL ID ']'
   20     | . '[' CALL ID WITH PARAM PARAMLIST ']'
   21 ARITHLOGIC: . TERM ARITH1
   22 TERM: . FACTOR TERM1
   27 FACTOR: . ID
   28       | . NUM
   29       | . '(' EXPR ')'
   30       | . '(' NEG EXPR ')'
   31       | . '(' NOT EXPR ')'

    NUM  shift, and go to state 9
    ID   shift, and go to state 10
    '['  shift, and go to state 11
    '('  shift, and go to state 12

    EXPR        go to state 79
    ARITHLOGIC  go to state 14
    TERM        go to state 15
    FACTOR      go to state 16


State 69

   17 WHILELOOP: WHILE '(' . EXPR ')' BODY END
   18 EXPR: . ARITHLOGIC
   19     | . '[' CALL ID ']'
   20     | . '[' CALL ID WITH PARAM PARAMLIST ']'
   21 ARITHLOGIC: . TERM ARITH1
   22 TERM: . FACTOR TERM1
   27 FACTOR: . ID
   28       | . NUM
   29       | . '(' EXPR ')'
   30       | . '(' NEG EXPR ')'
   31       | . '(' NOT EXPR ')'

    NUM  shift, and go to state 9
    ID   shift, and go to state 10
    '['  shift, and go to state 11
    '('  shift, and go to state 12

    EXPR        go to state 80
    ARITHLOGIC  go to state 14
    TERM        go to state 15
    FACTOR      go to state 16


State 70

   14 STATEMENT: RETURN EXPR .

    $default  reduce using rule 14 (STATEMENT)


State 71

    8 FUNCTION: '{' ID BODY '}' .

    $default  reduce using rule 8 (FUNCTION)


State 72

    9 BODY: STATEMENT BODY .

    $default  reduce using rule 9 (BODY)


State 73

    4 ENGINE: '[' . PLAY ']'
    5       | '[' . PLAY WITH PARAM PARAMLIST ']'

    PLAY  shift, and go to state 81


State 74

    1 START: SECTION1 NEWLINE PRIMITIVE SECTION2 NEWLINE FUNCTIONS SECTION3 NEWLINE ENGINE .

    $default  reduce using rule 1 (START)


State 75

   18 EXPR: . ARITHLOGIC
   19     | . '[' CALL ID ']'
   20     | . '[' CALL ID WITH PARAM PARAMLIST ']'
   21 ARITHLOGIC: . TERM ARITH1
   22 TERM: . FACTOR TERM1
   27 FACTOR: . ID
   28       | . NUM
   29       | . '(' EXPR ')'
   30       | . '(' NEG EXPR ')'
   31       | . '(' NOT EXPR ')'
   35 PARAM: ID '=' . EXPR

    NUM  shift, and go to state 9
    ID   shift, and go to state 10
    '['  shift, and go to state 11
    '('  shift, and go to state 12

    EXPR        go to state 82
    ARITHLOGIC  go to state 14
    TERM        go to state 15
    FACTOR      go to state 16


State 76

   35 PARAM: . ID '=' EXPR
   36 PARAMLIST: . PARAM PARAMLIST
   36          | PARAM . PARAMLIST
   37          | . %empty  [']']

    ID  shift, and go to state 65

    $default  reduce using rule 37 (PARAMLIST)

    PARAM      go to state 76
    PARAMLIST  go to state 83


State 77

   20 EXPR: '[' CALL ID WITH PARAM PARAMLIST . ']'

    ']'  shift, and go to state 84


State 78

   13 STATEMENT: ID '=' EXPR .

    $default  reduce using rule 13 (STATEMENT)


State 79

   15 IFSTATEMENT: IF '(' EXPR . ')' THEN BODY END
   16            | IF '(' EXPR . ')' THEN STATEMENT ELSE STATEMENT END

    ')'  shift, and go to state 85


State 80

   17 WHILELOOP: WHILE '(' EXPR . ')' BODY END

    ')'  shift, and go to state 86


State 81

    4 ENGINE: '[' PLAY . ']'
    5       | '[' PLAY . WITH PARAM PARAMLIST ']'

    WITH  shift, and go to state 87
    ']'   shift, and go to state 88


State 82

   35 PARAM: ID '=' EXPR .

    $default  reduce using rule 35 (PARAM)


State 83

   36 PARAMLIST: PARAM PARAMLIST .

    $default  reduce using rule 36 (PARAMLIST)


State 84

   20 EXPR: '[' CALL ID WITH PARAM PARAMLIST ']' .

    $default  reduce using rule 20 (EXPR)


State 85

   15 IFSTATEMENT: IF '(' EXPR ')' . THEN BODY END
   16            | IF '(' EXPR ')' . THEN STATEMENT ELSE STATEMENT END

    THEN  shift, and go to state 89


State 86

    9 BODY: . STATEMENT BODY
   10     | . STATEMENT
   11 STATEMENT: . IFSTATEMENT
   12          | . WHILELOOP
   13          | . ID '=' EXPR
   14          | . RETURN EXPR
   15 IFSTATEMENT: . IF '(' EXPR ')' THEN BODY END
   16            | . IF '(' EXPR ')' THEN STATEMENT ELSE STATEMENT END
   17 WHILELOOP: . WHILE '(' EXPR ')' BODY END
   17          | WHILE '(' EXPR ')' . BODY END

    ID      shift, and go to state 55
    IF      shift, and go to state 56
    WHILE   shift, and go to state 57
    RETURN  shift, and go to state 58

    BODY         go to state 90
    STATEMENT    go to state 60
    IFSTATEMENT  go to state 61
    WHILELOOP    go to state 62


State 87

    5 ENGINE: '[' PLAY WITH . PARAM PARAMLIST ']'
   35 PARAM: . ID '=' EXPR

    ID  shift, and go to state 65

    PARAM  go to state 91


State 88

    4 ENGINE: '[' PLAY ']' .

    $default  reduce using rule 4 (ENGINE)


State 89

    9 BODY: . STATEMENT BODY
   10     | . STATEMENT
   11 STATEMENT: . IFSTATEMENT
   12          | . WHILELOOP
   13          | . ID '=' EXPR
   14          | . RETURN EXPR
   15 IFSTATEMENT: . IF '(' EXPR ')' THEN BODY END
   15            | IF '(' EXPR ')' THEN . BODY END
   16            | . IF '(' EXPR ')' THEN STATEMENT ELSE STATEMENT END
   16            | IF '(' EXPR ')' THEN . STATEMENT ELSE STATEMENT END
   17 WHILELOOP: . WHILE '(' EXPR ')' BODY END

    ID      shift, and go to state 55
    IF      shift, and go to state 56
    WHILE   shift, and go to state 57
    RETURN  shift, and go to state 58

    BODY         go to state 92
    STATEMENT    go to state 93
    IFSTATEMENT  go to state 61
    WHILELOOP    go to state 62


State 90

   17 WHILELOOP: WHILE '(' EXPR ')' BODY . END

    END  shift, and go to state 94


State 91

    5 ENGINE: '[' PLAY WITH PARAM . PARAMLIST ']'
   35 PARAM: . ID '=' EXPR
   36 PARAMLIST: . PARAM PARAMLIST
   37          | . %empty  [']']

    ID  shift, and go to state 65

    $default  reduce using rule 37 (PARAMLIST)

    PARAM      go to state 76
    PARAMLIST  go to state 95


State 92

   15 IFSTATEMENT: IF '(' EXPR ')' THEN BODY . END

    END  shift, and go to state 96


State 93

    9 BODY: . STATEMENT BODY
    9     | STATEMENT . BODY
   10     | . STATEMENT
   10     | STATEMENT .  [END]
   11 STATEMENT: . IFSTATEMENT
   12          | . WHILELOOP
   13          | . ID '=' EXPR
   14          | . RETURN EXPR
   15 IFSTATEMENT: . IF '(' EXPR ')' THEN BODY END
   16            | . IF '(' EXPR ')' THEN STATEMENT ELSE STATEMENT END
   16            | IF '(' EXPR ')' THEN STATEMENT . ELSE STATEMENT END
   17 WHILELOOP: . WHILE '(' EXPR ')' BODY END

    ID      shift, and go to state 55
    IF      shift, and go to state 56
    ELSE    shift, and go to state 97
    WHILE   shift, and go to state 57
    RETURN  shift, and go to state 58

    $default  reduce using rule 10 (BODY)

    BODY         go to state 72
    STATEMENT    go to state 60
    IFSTATEMENT  go to state 61
    WHILELOOP    go to state 62


State 94

   17 WHILELOOP: WHILE '(' EXPR ')' BODY END .

    $default  reduce using rule 17 (WHILELOOP)


State 95

    5 ENGINE: '[' PLAY WITH PARAM PARAMLIST . ']'

    ']'  shift, and go to state 98


State 96

   15 IFSTATEMENT: IF '(' EXPR ')' THEN BODY END .

    $default  reduce using rule 15 (IFSTATEMENT)


State 97

   11 STATEMENT: . IFSTATEMENT
   12          | . WHILELOOP
   13          | . ID '=' EXPR
   14          | . RETURN EXPR
   15 IFSTATEMENT: . IF '(' EXPR ')' THEN BODY END
   16            | . IF '(' EXPR ')' THEN STATEMENT ELSE STATEMENT END
   16            | IF '(' EXPR ')' THEN STATEMENT ELSE . STATEMENT END
   17 WHILELOOP: . WHILE '(' EXPR ')' BODY END

    ID      shift, and go to state 55
    IF      shift, and go to state 56
    WHILE   shift, and go to state 57
    RETURN  shift, and go to state 58

    STATEMENT    go to state 99
    IFSTATEMENT  go to state 61
    WHILELOOP    go to state 62


State 98

    5 ENGINE: '[' PLAY WITH PARAM PARAMLIST ']' .

    $default  reduce using rule 5 (ENGINE)


State 99

   16 IFSTATEMENT: IF '(' EXPR ')' THEN STATEMENT ELSE STATEMENT . END

    END  shift, and go to state 100


State 100

   16 IFSTATEMENT: IF '(' EXPR ')' THEN STATEMENT ELSE STATEMENT END .

    $default  reduce using rule 16 (IFSTATEMENT)
